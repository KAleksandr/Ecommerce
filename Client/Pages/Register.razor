@page "/register"
@inject IAuthService AuthService

<PageTitle>Registr</PageTitle>
<h3>Register</h3>
<EditForm Model="user" OnValidSubmit="HandleRegistaration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value=user.Email class="form-control" type="email" placeholder="Email" />
        <ValidationMessage For="@(()=> user.Email)"/>
        <label for="password">Password</label>
        <InputText id="password" @bind-Value=user.Password class="form-control" type="password" placeholder="Password" />
        <ValidationMessage For="@(()=> user.Password)" />
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value=user.ConfirmPassword class="form-control" type="password" placeholder="Confirm Password" />
        <ValidationMessage For="@(()=> user.ConfirmPassword)" />
    </div>
    <button class="btn btn-primary" type="submit">Register</button>
    <div class="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>


@code {
    UserRegister user = new UserRegister();
    string message = string.Empty;
    string messageCssClass = string.Empty;
    async Task HandleRegistaration()
    {

        var result = await AuthService.Register(user);
        message = result.Message;
        if (!result.Success)
        {
            messageCssClass = "text-danger";
        }
        else
        {
            messageCssClass = "text-success";
        }

    }
}
